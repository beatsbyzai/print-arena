{"version":3,"sources":["components/ImageLayout.js","components/TextLayout.js","components/LinkLayout.js","App.js","index.js"],"names":["ImageLayout","props","react_default","a","createElement","className","style","title","alt","src","url","author","TextLayout","dangerouslySetInnerHTML","text","content","__html","LinkLayout","image","arena","Arena","accessToken","process","App","_useState","useState","ok","_useState2","Object","slicedToArray","channelData","setChannelData","_useState3","_useState4","totalPages","setTotalPages","useEffect","channel","thumb","then","contents","Math","ceil","length","allData","Array","fill","map","_","i","page","per","concat","toConsumableArray","sort","b","generated_title","replace","localeCompare","catch","err","console","log","onClick","e","window","print","filter","item","class","key","components_ImageLayout","original","id","connected_by_username","components_TextLayout","content_html","components_LinkLayout","source","makePage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ed04d89.chunk.js","sourcesContent":["import React from 'react'\n\nconst ImageLayout = (props) => (\n  <div className=\"image\" style={props.style}>\n    <small>\n      <i>{props.title}</i>\n    </small>\n    <br />\n    <img alt=\"\" className=\"to-print\" src={props.url} />\n    <br />\n    <small>added by {props.author}</small>\n  </div>\n)\n\nexport default ImageLayout\n","import React from 'react'\n\nfunction createMarkup(text) {\n  return { __html: text }\n}\n\nconst TextLayout = (props) => {\n  return (\n    <div className=\"text\" style={props.style}>\n      <small>\n        <i>{props.title}</i>\n      </small>\n      <div dangerouslySetInnerHTML={createMarkup(props.content)} />\n      <small>added by {props.author}</small>\n    </div>\n  )\n}\n\nexport default TextLayout\n","import React from 'react';\n\nconst LinkLayout = (props) => (\n  <div className='image' style={props.style}>\n    <img src={props.image} alt='' />\n    <div className='itemText'>\n      {/* <p className='imageTitle'>{'http://are.na/block/' + this.props.id}</p> */}\n      {/* <p className='imageTitle'>{this.props.title}</p>\n      <a href=\"src\" className='desc'>{this.props.url}</a> */}\n    </div>\n  </div>\n);\n\nexport default LinkLayout\n","import React, { useState, useEffect } from 'react'\nimport Arena from 'are.na'\nimport './App.css'\n\nimport ImageLayout from './components/ImageLayout'\nimport TextLayout from './components/TextLayout'\nimport LinkLayout from './components/LinkLayout'\n\nconst arena = new Arena({\n  accessToken: process.env.REACT_APP_TOKEN,\n})\nfunction App() {\n  const [channelData, setChannelData] = useState([{ ok: 'hi' }])\n  const [totalPages, setTotalPages] = useState(0)\n\n  useEffect(() => {\n    arena\n      .channel('dark-matters-dictionary')\n      .thumb()\n      .then((contents) => {\n        setTotalPages(Math.ceil((contents.length - 1) / 25))\n      })\n  }, [])\n\n  useEffect(() => {\n    let allData = []\n\n    Array(totalPages)\n      .fill()\n      .map((_, i) =>\n        arena\n          .channel('dark-matters-dictionary')\n          .contents({ page: i + 1, per: 25 })\n          .then((contents) => {\n            allData = [...allData, ...contents]\n          })\n          .then(() => {\n            setChannelData(\n              allData.sort((a, b) =>\n                a.generated_title\n                  .replace(/\\s/g, '')\n                  .localeCompare(b.generated_title.replace(/\\s/g, ''))\n              )\n            )\n          })\n          .catch((err) => console.log(err))\n      )\n  }, [setChannelData, totalPages])\n\n  const makePage = (item, i) => {\n    switch (item.class) {\n      case 'Image':\n        return (\n          <ImageLayout\n            url={item.image.original.url}\n            id={item.id}\n            title={item.generated_title}\n            author={item.connected_by_username}\n            key={i}\n          />\n        )\n      case 'Text':\n        return (\n          <TextLayout\n            content={item.content_html}\n            id={item.id}\n            title={item.generated_title}\n            author={item.connected_by_username}\n            key={i}\n          />\n        )\n      case 'Link':\n        return (\n          <LinkLayout\n            url={item.source.url}\n            id={item.id}\n            title={item.generated_title}\n            image={item.image.original.url}\n            author={item.connected_by_username}\n            key={i}\n          />\n        )\n      default:\n        console.log(item)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"controls\">\n        {channelData ? (\n          <span>{`${channelData.length} pages rendered (~${\n            totalPages * 25 - channelData.length\n          } dropped) `}</span>\n        ) : (\n          <span>Loading...</span>\n        )}\n        <button className=\"print\" onClick={(e) => window.print()}>\n          Print\n        </button>\n      </div>\n\n      <div className=\"layout\">\n        <section className=\"page\">\n          <div className=\"text\">\n            <p>Dark Matters Dictionary</p>\n            <small>SFPC 2020</small>\n          </div>\n        </section>\n        {channelData &&\n          channelData\n            .filter(\n              (item) =>\n                item.generated_title !== 'Untitled' &&\n                item.class !== 'Attachment'\n            )\n            .map((item, i) => {\n              return (\n                <section key={i} className=\"page\">\n                  {makePage(item, i)}\n                  <div className=\"counter\"></div>\n                </section>\n              )\n            })}\n      </div>\n    </div>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}